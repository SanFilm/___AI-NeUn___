# -F- ---divider---------------------------------------------
def divider(num):
    r = '- - -'
    print()
    for i in range(5): print(f'{r} {num}. ', end = '')
    print(f'{r}\n')
# -F- ---br--------------------------------------------------
def br(ch):
    print(f'{ch} ', end = '')
    for i in range(20): print(f'{ch} ', end = '')
    print(f'{ch}')
# -F- ---br_-------------------------------------------------
def br_(ch):
    print(f'\n{ch} ', end = '')
    for i in range(50): print(f'{ch} ', end = '')
    print(f'{ch}\n')
# -F- -------------------------------------------------------




# [ ] -------------------------------------------------->->->
br_('=')
# -C- ---------------
print('--- ARGS - Примеры. ---'.center(60, '-'))
# https://yandex.by/video/preview/9425171271713746201
# https://www.youtube.com/watch?v=KxgBB3-Z7wc
br('-')
# -C- ---------------
print('\n', "  *args - неограниченное количество аргументов.  ".center(70, '-'))
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def hello(*args):
    print(args,' - ', type(args))           # ('Мама', 'Папа')
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
print(" def hallo():".rjust(30, '-'))
# -f- ------------------------------
hello('Мама', 'Папа')
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def greet_people(language: str, *people: str):
    print(people, ' - ', type(people))
    if language == 'it':
        greeting = 'Ciao'
    elif language == 'en':
        greeting = "Hello"
    else:
        greeting = "Привет"
    for person in people:
        print(f'{greeting} {person} !!!')
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
print(" def greet_people():".rjust(30, '-'))
# -f- ------------------------------
greet_people("it", "Mario", "Luigi")
greet_people("en", "Harry", "Mia")
greet_people("ru", "Васёк", "Ольга")
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def add_numbers(*numbers, text: str):
    numbers = (numbers for numbers in numbers)
    print(sum(numbers), text, ' - ', type(numbers))
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
print(" def add_numbers():".rjust(30, '-'))
nums = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10,)
# -f- ------------------------------
add_numbers(1, 2, 3, 4, 5, text="- сумма введённых цифр.")
add_numbers(*nums, text="- сумма введённых цифр.")
br('-')
# [ ] -------------------------------------------------<-<-<-


# |--- ------------------------------------------------------
# -C- ---------------
print('\n', "  **kwargs - аргументы по ключевым словам (именованные арг.).  ".center(70, '-'))
print('\n', "  !!!  ОБРАЩЕНИЕ ПО КЛЮЧАМ В ФУНКЦИИ НЕИЗМЕННО  !!!  ".center(70, '-'))
br('-')
# |--- ------------------------------------------------------
# -F- -------------------------------------------------------
def create_users(**users):
    print(users, ' - ', type(users))
    for user in users:
        print('{:10}'.format(user.rjust(10)), end = " ")
    print('   - ', type(user))
    for user in users.values():
        print('{:10}'.format(user.rjust(10)), end=" ")
    print('   - ', type(user))
    for user in users.values():
        print(user.rjust(10), end=" ")
    print('   - ', type(user))
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
print(" def create_users():".rjust(30, '-'))
# -f- ------------------------------
create_users(us1='мама', us2='папа', us3='дитёнышь')
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def say_hello(name = str, /, **people):
    # всё, что находится до '/', рассматривается как безымянные переменные
    print(f'{name} приветствует {people}')
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
# -C- ---------------
print('\n', "  всё, что до '/' - как безымянные переменные.  ".center(70, '-'))
# -f- ------------------------------
say_hello('мама', us2='папа', us3='дитёнышь')
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def create_team1(name1, name2, /):
    # всё, что находится до '/', рассматривается как безымянные переменные
    print(f'{name1} & {name2} являются командой !!!')
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
# -f- ------------------------------
create_team1('мама', 'папа')                # безымянные переменные (до) '/'
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def create_team2(*, us1, us2):
    # всё, что находится после '*', переменные должны иметь ключи.
    print(f'{us1} & {us2} являются командой !!!')
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
# -C- ---------------
print('\n', "  всё, что после '*', переменные должны иметь ключи.  ".center(70, '-'))
# -f- ------------------------------
create_team2(us1='мама', us2='папа')        # '*' (после) переменные с ключами.
br('-')
# [ ] -------------------------------------------------<-<-<-


# XXX ------------------------------------------------------
# -F- -------------------------------------------------------
def work(name = str, /, job = str, *, year = int):
    # всё, что находится до '/', рассматривается как безымянные переменные
    # всё, что находится после '*', переменные должны иметь ключи.
    print(f'{name} и {job} вместе больше {year} лет !!!')
# -F- -------------------------------------------------------
# [*] -------------------------------------------------->->->
# -C- ---------------
print('\n', "  без ключа '/' всё равно '*' с ключом.  ".center(70, '-'))
# -f- ------------------------------
work('мама', 'папа', year=20)
work('мама', job='папа', year=20)
br('-')
# [ ] -------------------------------------------------<-<-<-

# |--- ------------------------------------------------------
# print('---  ---')
# br('-')
br_("=")
